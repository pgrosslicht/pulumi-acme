// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Acme
{
    [AcmeResourceType("acme:index/acmeRegistration:AcmeRegistration")]
    public partial class AcmeRegistration : global::Pulumi.CustomResource
    {
        [Output("accountKeyPem")]
        public Output<string> AccountKeyPem { get; private set; } = null!;

        [Output("emailAddress")]
        public Output<string> EmailAddress { get; private set; } = null!;

        [Output("externalAccountBinding")]
        public Output<Outputs.AcmeRegistrationExternalAccountBinding?> ExternalAccountBinding { get; private set; } = null!;

        [Output("registrationUrl")]
        public Output<string> RegistrationUrl { get; private set; } = null!;


        /// <summary>
        /// Create a AcmeRegistration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AcmeRegistration(string name, AcmeRegistrationArgs args, CustomResourceOptions? options = null)
            : base("acme:index/acmeRegistration:AcmeRegistration", name, args ?? new AcmeRegistrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AcmeRegistration(string name, Input<string> id, AcmeRegistrationState? state = null, CustomResourceOptions? options = null)
            : base("acme:index/acmeRegistration:AcmeRegistration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/pgrosslicht/pulumi-acme/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AcmeRegistration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AcmeRegistration Get(string name, Input<string> id, AcmeRegistrationState? state = null, CustomResourceOptions? options = null)
        {
            return new AcmeRegistration(name, id, state, options);
        }
    }

    public sealed class AcmeRegistrationArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountKeyPem", required: true)]
        public Input<string> AccountKeyPem { get; set; } = null!;

        [Input("emailAddress", required: true)]
        public Input<string> EmailAddress { get; set; } = null!;

        [Input("externalAccountBinding")]
        public Input<Inputs.AcmeRegistrationExternalAccountBindingArgs>? ExternalAccountBinding { get; set; }

        public AcmeRegistrationArgs()
        {
        }
        public static new AcmeRegistrationArgs Empty => new AcmeRegistrationArgs();
    }

    public sealed class AcmeRegistrationState : global::Pulumi.ResourceArgs
    {
        [Input("accountKeyPem")]
        public Input<string>? AccountKeyPem { get; set; }

        [Input("emailAddress")]
        public Input<string>? EmailAddress { get; set; }

        [Input("externalAccountBinding")]
        public Input<Inputs.AcmeRegistrationExternalAccountBindingGetArgs>? ExternalAccountBinding { get; set; }

        [Input("registrationUrl")]
        public Input<string>? RegistrationUrl { get; set; }

        public AcmeRegistrationState()
        {
        }
        public static new AcmeRegistrationState Empty => new AcmeRegistrationState();
    }
}
